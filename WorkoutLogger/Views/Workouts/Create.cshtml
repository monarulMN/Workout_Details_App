@model WorkoutLogger.Models.WorkoutSession
@{
    ViewData["Title"] = "Create Workout Session";
    var exercises = ViewBag.Exercises as List<WorkoutLogger.Models.Exercise>;
}

<h1>Create Workout Session</h1>

<form asp-action="Create" method="post">
    <div class="mb-3">
        <label asp-for="Date" class="form-label"></label>
        <input asp-for="Date" class="form-control" type="date" />
    </div>

    <h5>Workout Sets</h5>

    <div id="sets-container"></div>

    <button type="button" class="btn btn-secondary" onclick="addSet()">Add Set</button>

    <div class="mt-3">
        <button type="submit" class="btn btn-success">Save Session</button>
    </div>
</form>

<script>
    var exercises = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(exercises));
    var setCount = 0;

    function addSet() {
        var container = document.getElementById('sets-container');

        var setDiv = document.createElement('div');
        setDiv.className = 'border p-3 mb-2';

        setDiv.innerHTML = `
            <div class="mb-2">
                <label>Exercise:</label>
                <select name="sets[${setCount}].ExerciseId" class="form-select">
                    ${exercises.map(e => `<option value="${e.id}">${e.name}</option>`).join('')}
                </select>
            </div>
            <div class="mb-2">
                <label>Reps:</label>
                <input name="sets[${setCount}].Reps" class="form-control" type="number" min="1" />
            </div>
            <div class="mb-2">
                <label>Weight (kg):</label>
                <input name="sets[${setCount}].Weight" class="form-control" type="number" step="0.5" min="0" />
            </div>
        `;

        container.appendChild(setDiv);
        setCount++;
    }
</script>
